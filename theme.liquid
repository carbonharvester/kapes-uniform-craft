<!doctype html>
<html class="no-js" lang="{{ request.locale.iso_code }}">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width,initial-scale=1">

    <!-- Enhanced Cross-domain authentication handler - MUST be first -->
    <script>
      (function() {
        console.log('[Kapes Auth] Initializing enhanced authentication system...');
        
        // Complete school code database with redirect URLs
        const SCHOOL_DATABASE = {
          'BISJ': {
            url: '/collections/school-b1sj47x9',
            name: 'British International School of Jeddah',
            currency: 'SAR'
          },
          'BISJ2173': {
            url: '/collections/school-b1sj47x9',
            name: 'British International School of Jeddah',
            currency: 'SAR'
          },
          'DEMO123': {
            url: '/collections/school-demo123',
            name: 'Demo School',
            currency: 'AED'
          },
          'TEST001': {
            url: '/collections/school-test001',
            name: 'Test School 1',
            currency: 'AED'
          },
          // Legacy support for existing collections
          'NADEEN2020': {
            url: '/collections/nadeen-school',
            name: 'Nadeen School',
            currency: 'BHD'
          },
          'FAIRGREEN123': {
            url: '/collections/fairgreen-international',
            name: 'Fairgreen International School',
            currency: 'AED'
          },
          'ARBOR2021': {
            url: '/collections/arbor-school',
            name: 'Arbor School',
            currency: 'AED'
          },
          'CHELTENHAM456': {
            url: '/collections/cheltenham-muscat',
            name: 'Cheltenham Muscat',
            currency: 'OMR'
          },
          'NAJMARA789': {
            url: '/collections/najmara',
            name: 'Najmara School',
            currency: 'AED'
          }
        };

        // Enhanced authentication state management
        function setAuthenticationState(schoolCode, schoolData) {
          localStorage.setItem('pwd', schoolCode);
          localStorage.setItem('school', schoolCode);
          localStorage.setItem('schoolName', schoolData.name);
          localStorage.setItem('preferredCurrency', schoolData.currency);
          localStorage.setItem('authenticated', 'true');
          localStorage.setItem('authTimestamp', Date.now().toString());
          
          console.log('[Kapes Auth] Authentication state set:', {
            code: schoolCode,
            name: schoolData.name,
            currency: schoolData.currency,
            collection: schoolData.url
          });
        }

        // Enhanced collection page authentication
        function authenticateForCollection(schoolCode, schoolData) {
          setAuthenticationState(schoolCode, schoolData);
          
          // Set collection-specific authentication
          const currentPath = window.location.pathname;
          const collectionMatch = currentPath.match(/\/collections\/([^\/]+)/);
          if (collectionMatch) {
            localStorage.setItem('currentCollection', collectionMatch[1]);
            console.log('[Kapes Auth] Collection authenticated:', collectionMatch[1]);
          }
          
          // Trigger product visibility update
          setTimeout(function() {
            const event = new CustomEvent('kapes:authenticated', { 
              detail: { 
                schoolCode: schoolCode, 
                schoolData: schoolData,
                collection: collectionMatch ? collectionMatch[1] : null
              } 
            });
            window.dispatchEvent(event);
          }, 100);
        }

        // Handle cross-domain authentication via URL parameter
        const urlParams = new URLSearchParams(window.location.search);
        const codeParam = urlParams.get('code');
        
        // Check for pending authentication from React app
        let pendingAuth = null;
        try {
          const pendingData = localStorage.getItem('kapes.pendingAuth');
          if (pendingData) {
            const parsed = JSON.parse(pendingData);
            const now = Date.now();
            
            // Clear stale auth data (older than 5 minutes)
            if (now - parsed.timestamp > 5 * 60 * 1000) {
              localStorage.removeItem('kapes.pendingAuth');
              console.log('[Kapes Auth] Cleared stale pending auth data');
            } else {
              pendingAuth = parsed;
              console.log('[Kapes Auth] Found pending auth:', pendingAuth.code);
            }
          }
        } catch (e) {
          localStorage.removeItem('kapes.pendingAuth');
          console.log('[Kapes Auth] Cleared invalid pending auth data');
        }

        // Determine the school code to authenticate
        const schoolCode = codeParam || (pendingAuth && pendingAuth.code);
        
        if (schoolCode) {
          const normalizedCode = schoolCode.toUpperCase();
          console.log('[Kapes Auth] Processing code:', normalizedCode);
          
          const schoolData = SCHOOL_DATABASE[normalizedCode];
          
          if (schoolData) {
            // Enhanced authentication for collection pages
            authenticateForCollection(normalizedCode, schoolData);
            
            // Clean up pending auth
            localStorage.removeItem('kapes.pendingAuth');
            
            // Handle URL redirection if needed
            const currentPath = window.location.pathname;
            const expectedPath = schoolData.url;
            
            // Enhanced redirection logic
            if (currentPath === '/' || 
                (currentPath !== expectedPath && 
                 !currentPath.includes('/products/') && 
                 !currentPath.includes('/cart') &&
                 !currentPath.includes('/checkout'))) {
              
              const targetUrl = expectedPath + '?authenticated=true';
              console.log('[Kapes Auth] Redirecting to:', targetUrl);
              
              // Use replace to avoid back button issues
              window.location.replace(targetUrl);
              return;
            }
            
            // Clean up URL by removing the code parameter but keep authenticated flag
            if (codeParam) {
              const url = new URL(window.location);
              url.searchParams.delete('code');
              url.searchParams.set('authenticated', 'true');
              window.history.replaceState({}, document.title, url.pathname + url.search);
            }
            
          } else {
            console.warn('[Kapes Auth] Invalid school code:', normalizedCode);
            // Clear any existing authentication for invalid codes
            localStorage.removeItem('pwd');
            localStorage.removeItem('school');
            localStorage.removeItem('schoolName');
            localStorage.removeItem('authenticated');
            localStorage.removeItem('kapes.pendingAuth');
            
            // Redirect to homepage for invalid codes
            if (window.location.pathname !== '/') {
              window.location.replace('/');
            }
          }
        } else {
          // Check if we have existing valid authentication
          const existingAuth = localStorage.getItem('pwd');
          if (existingAuth) {
            const schoolData = SCHOOL_DATABASE[existingAuth.toUpperCase()];
            if (schoolData) {
              console.log('[Kapes Auth] Using existing authentication:', existingAuth);
              // Refresh authentication state
              setAuthenticationState(existingAuth, schoolData);
            } else {
              // Clear invalid existing auth
              console.log('[Kapes Auth] Clearing invalid existing authentication');
              localStorage.removeItem('pwd');
              localStorage.removeItem('school');
              localStorage.removeItem('schoolName');
              localStorage.removeItem('authenticated');
            }
          } else {
            console.log('[Kapes Auth] No school code found in URL or storage');
          }
        }

        // Override any existing theme school code functions
        window.KAPES_SCHOOL_DATABASE = SCHOOL_DATABASE;
        
        window.validateSchoolCode = function(code) {
          const normalizedCode = code.toUpperCase();
          const schoolData = SCHOOL_DATABASE[normalizedCode];
          
          if (schoolData) {
            setAuthenticationState(normalizedCode, schoolData);
            
            // Redirect to the school's collection
            window.location.href = schoolData.url + '?authenticated=true';
            return true;
          }
          
          return false;
        };

        // Enhanced school code lookup for navigation
        window.getSchoolCollectionUrl = function(code) {
          const normalizedCode = code ? code.toUpperCase() : null;
          const schoolData = normalizedCode ? SCHOOL_DATABASE[normalizedCode] : null;
          return schoolData ? schoolData.url : '/';
        };

        // Enhanced product visibility handler
        window.showProducts = function() {
          console.log('[Kapes Auth] Showing products for authenticated user');
          
          // Show all hidden products
          document.querySelectorAll('.product-item, .grid__item, .card-wrapper').forEach(function(item) {
            item.style.display = '';
            item.classList.remove('hidden');
          });
          
          // Show collection content
          const collectionGrid = document.querySelector('.collection .grid');
          if (collectionGrid) {
            collectionGrid.style.display = 'grid';
          }
          
          // Hide any authentication messages
          document.querySelectorAll('.auth-required, .no-products').forEach(function(msg) {
            msg.style.display = 'none';
          });
          
          // Trigger currency change if needed
          const preferredCurrency = localStorage.getItem('preferredCurrency');
          if (preferredCurrency) {
            setTimeout(function() {
              const currencyFlag = document.querySelector(`li.flag-${preferredCurrency}`);
              if (currencyFlag) {
                currencyFlag.click();
              }
            }, 500);
          }
        };

        console.log('[Kapes Auth] Enhanced authentication system initialized');
      })();
    </script>

    <meta name="theme-color" content="">
    <link rel="canonical" href="{{ canonical_url }}">
    <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate">
    <meta http-equiv="Pragma" content="no-cache">
    <meta http-equiv="Expires" content="0">
    

    <!-- Rest of your existing head content stays the same -->
    {%- if settings.favicon != blank -%}
      <link rel="icon" type="image/png" href="{{ settings.favicon | image_url: width: 32, height: 32 }}">
    {% endif %}

    {%- unless settings.type_header_font.system? and settings.type_body_font.system? -%}
      <link rel="preconnect" href="https://fonts.shopifycdn.com" crossorigin>
    {%- endunless -%}

    {% if collection.handle == 'najmara' or request.path contains '/collections' %}
      <meta name="robots" content="noindex, nofollow">
    {% endif %}

  <!-- Avada Size Chart Script -->
 {% include 'avada-sc-setting' %}
  <!-- /Avada Size Chart Script -->
 
<title>
      {{ page_title }}
      {%- if current_tags %} &ndash; tagged "{{ current_tags | join: ', ' }}"{% endif -%}
      {%- if current_page != 1 %} &ndash; Page {{ current_page }}{% endif -%}
      {%- unless page_title contains shop.name %} &ndash; {{ shop.name }}{% endunless -%}
    </title>

    {% if page_description %}
      <meta name="description" content="{{ page_description | escape }}">
    {% endif %}

    {% render 'meta-tags' %}

    <script src="{{ 'constants.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'pubsub.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'global.js' | asset_url }}" defer="defer"></script>
    {%- if settings.animations_reveal_on_scroll -%}
      <script src="{{ 'animations.js' | asset_url }}" defer="defer"></script>
    {%- endif -%}

    {{ content_for_header }}

    {%- liquid
      assign body_font_bold = settings.type_body_font | font_modify: 'weight', 'bold'
      assign body_font_italic = settings.type_body_font | font_modify: 'style', 'italic'
      assign body_font_bold_italic = body_font_bold | font_modify: 'style', 'italic'
    %}

    {% style %}
     
      {{ settings.type_body_font | font_face: font_display: 'swap' }}
      {{ body_font_bold | font_face: font_display: 'swap' }}
      {{ body_font_italic | font_face: font_display: 'swap' }}
      {{ body_font_bold_italic | font_face: font_display: 'swap' }}
      {{ settings.type_header_font | font_face: font_display: 'swap' }}

      {% for scheme in settings.color_schemes -%}
        {% assign scheme_classes = scheme_classes | append: ', .color-' | append: scheme.id %}
        {% if forloop.index == 1 -%}
          :root,
        {%- endif %}
        .color-{{ scheme.id }} {
          --color-background: {{ scheme.settings.background.red }},{{ scheme.settings.background.green }},{{ scheme.settings.background.blue }};
        {% if scheme.settings.background_gradient != empty %}
          --gradient-background: {{ scheme.settings.background_gradient }};
        {% else %}
          --gradient-background: {{ scheme.settings.background }};
        {% endif %}
        --color-foreground: {{ settings.text_color }};
        --color-shadow: {{ scheme.settings.shadow.red }},{{ scheme.settings.shadow.green }},{{ scheme.settings.shadow.blue }};
        --color-button: {{ scheme.settings.button.red }},{{ scheme.settings.button.green }},{{ scheme.settings.button.blue }};
        --color-button-text: {{ scheme.settings.button_label.red }},{{ scheme.settings.button_label.green }},{{ scheme.settings.button_label.blue }};
        --color-secondary-button: {{ scheme.settings.background.red }},{{ scheme.settings.background.green }},{{ scheme.settings.background.blue }};
        --color-secondary-button-text: {{ scheme.settings.secondary_button_label.red }},{{ scheme.settings.secondary_button_label.green }},{{ scheme.settings.secondary_button_label.blue }};
        --color-link: {{ scheme.settings.secondary_button_label.red }},{{ scheme.settings.secondary_button_label.green }},{{ scheme.settings.secondary_button_label.blue }};
        --color-badge-foreground: {{ scheme.settings.text.red }},{{ scheme.settings.text.green }},{{ scheme.settings.text.blue }};
        --color-badge-background: {{ scheme.settings.background.red }},{{ scheme.settings.background.green }},{{ scheme.settings.background.blue }};
        --color-badge-border: {{ scheme.settings.text.red }},{{ scheme.settings.text.green }},{{ scheme.settings.text.blue }};
        --payment-terms-background-color: rgb({{ scheme.settings.background.rgb }});
      }
      {% endfor %}

      {{ scheme_classes | prepend: 'body' }} {
        color: {{ settings.text_color }};
        background-color: rgb(var(--color-background));
      }

      :root {

        --primary-color: {{ settings.primary_color }};
        --secondary-color: {{ settings.secondary_color }};
        --text-color: {{ settings.text_color }};
        --ancent-color: {{ settings.ancent_color }};        
        
        --font-body-family: 'AcademySans';
        --font-body-style: {{ settings.type_body_font.style }};
        --font-body-weight: {{ settings.type_body_font.weight }};
        --font-body-weight-bold: {{ settings.type_body_font.weight | plus: 300 | at_most: 1000 }};

        --font-heading-family: 'AcademySans';
        --font-heading-style: {{ settings.type_header_font.style }};
        --font-heading-weight: {{ settings.type_header_font.weight }};

        --font-body-scale: {{ settings.body_scale | divided_by: 100.0 }};
        --font-heading-scale: {{ settings.heading_scale | times: 1.0 | divided_by: settings.body_scale }};

        --media-padding: {{ settings.media_padding }}px;
        --media-border-opacity: {{ settings.media_border_opacity | divided_by: 100.0 }};
        --media-border-width: {{ settings.media_border_thickness }}px;
        --media-radius: {{ settings.media_radius }}px;
        --media-shadow-opacity: {{ settings.media_shadow_opacity | divided_by: 100.0 }};
        --media-shadow-horizontal-offset: {{ settings.media_shadow_horizontal_offset }}px;
        --media-shadow-vertical-offset: {{ settings.media_shadow_vertical_offset }}px;
        --media-shadow-blur-radius: {{ settings.media_shadow_blur }}px;
        --media-shadow-visible: {% if settings.media_shadow_opacity > 0 %}1{% else %}0{% endif %};

        --page-width: {{ settings.page_width | divided_by: 10 }}rem;
        --page-width-margin: {% if settings.page_width == '1600' %}2{% else %}0{% endif %}rem;

        --product-card-image-padding: {{ settings.card_image_padding | divided_by: 10.0 }}rem;
        --product-card-corner-radius: {{ settings.card_corner_radius | divided_by: 10.0 }}rem;
        --product-card-text-alignment: {{ settings.card_text_alignment }};
        --product-card-border-width: {{ settings.card_border_thickness | divided_by: 10.0 }}rem;
        --product-card-border-opacity: {{ settings.card_border_opacity | divided_by: 100.0 }};
        --product-card-shadow-opacity: {{ settings.card_shadow_opacity | divided_by: 100.0 }};
        --product-card-shadow-visible: {% if settings.card_shadow_opacity > 0 %}1{% else %}0{% endif %};
        --product-card-shadow-horizontal-offset: {{ settings.card_shadow_horizontal_offset | divided_by: 10.0 }}rem;
        --product-card-shadow-vertical-offset: {{ settings.card_shadow_vertical_offset | divided_by: 10.0 }}rem;
        --product-card-shadow-blur-radius: {{ settings.card_shadow_blur | divided_by: 10.0 }}rem;

        --collection-card-image-padding: {{ settings.collection_card_image_padding | divided_by: 10.0 }}rem;
        --collection-card-corner-radius: {{ settings.collection_card_corner_radius | divided_by: 10.0 }}rem;
        --collection-card-text-alignment: {{ settings.collection_card_text_alignment }};
        --collection-card-border-width: {{ settings.collection_card_border_thickness | divided_by: 10.0 }}rem;
        --collection-card-border-opacity: {{ settings.collection_card_border_opacity | divided_by: 100.0 }};
        --collection-card-shadow-opacity: {{ settings.collection_card_shadow_opacity | divided_by: 100.0 }};
        --collection-card-shadow-visible: {% if settings.collection_card_shadow_opacity > 0 %}1{% else %}0{% endif %};
        --collection-card-shadow-horizontal-offset: {{ settings.collection_card_shadow_horizontal_offset | divided_by: 10.0 }}rem;
        --collection-card-shadow-vertical-offset: {{ settings.collection_card_shadow_vertical_offset | divided_by: 10.0 }}rem;
        --collection-card-shadow-blur-radius: {{ settings.collection_card_shadow_blur | divided_by: 10.0 }}rem;

        --blog-card-image-padding: {{ settings.blog_card_image_padding | divided_by: 10.0 }}rem;
        --blog-card-corner-radius: {{ settings.blog_card_corner_radius | divided_by: 10.0 }}rem;
        --blog-card-text-alignment: {{ settings.blog_card_text_alignment }};
        --blog-card-border-width: {{ settings.blog_card_border_thickness | divided_by: 10.0 }}rem;
        --blog-card-border-opacity: {{ settings.blog_card_border_opacity | divided_by: 100.0 }};
        --blog-card-shadow-opacity: {{ settings.blog_card_shadow_opacity | divided_by: 100.0 }};
        --blog-card-shadow-visible: {% if settings.blog_card_shadow_opacity > 0 %}1{% else %}0{% endif %};
        --blog-card-shadow-horizontal-offset: {{ settings.blog_card_shadow_horizontal_offset | divided_by: 10.0 }}rem;
        --blog-card-shadow-vertical-offset: {{ settings.blog_card_shadow_vertical_offset | divided_by: 10.0 }}rem;
        --blog-card-shadow-blur-radius: {{ settings.blog_card_shadow_blur | divided_by: 10.0 }}rem;

        --badge-corner-radius: {{ settings.badge_corner_radius | divided_by: 10.0 }}rem;

        --popup-border-width: {{ settings.popup_border_thickness }}px;
        --popup-border-opacity: {{ settings.popup_border_opacity | divided_by: 100.0 }};
        --popup-corner-radius: {{ settings.popup_corner_radius }}px;
        --popup-shadow-opacity: {{ settings.popup_shadow_opacity | divided_by: 100.0 }};
        --popup-shadow-horizontal-offset: {{ settings.popup_shadow_horizontal_offset }}px;
        --popup-shadow-vertical-offset: {{ settings.popup_shadow_vertical_offset }}px;
        --popup-shadow-blur-radius: {{ settings.popup_shadow_blur }}px;

        --drawer-border-width: {{ settings.drawer_border_thickness }}px;
        --drawer-border-opacity: {{ settings.drawer_border_opacity | divided_by: 100.0 }};
        --drawer-shadow-opacity: {{ settings.drawer_shadow_opacity | divided_by: 100.0 }};
        --drawer-shadow-horizontal-offset: {{ settings.drawer_shadow_horizontal_offset }}px;
        --drawer-shadow-vertical-offset: {{ settings.drawer_shadow_vertical_offset }}px;
        --drawer-shadow-blur-radius: {{ settings.drawer_shadow_blur }}px;

        --spacing-sections-desktop: {{ settings.spacing_sections }}px;
        --spacing-sections-mobile: {% if settings.spacing_sections < 24 %}{{ settings.spacing_sections }}{% else %}{{ settings.spacing_sections | times: 0.7 | round | at_least: 20 }}{% endif %}px;

        --grid-desktop-vertical-spacing: {{ settings.spacing_grid_vertical }}px;
        --grid-desktop-horizontal-spacing: {{ settings.spacing_grid_horizontal }}px;
        --grid-mobile-vertical-spacing: {{ settings.spacing_grid_vertical | divided_by: 2 }}px;
        --grid-mobile-horizontal-spacing: {{ settings.spacing_grid_horizontal | divided_by: 2 }}px;

        --text-boxes-border-opacity: {{ settings.text_boxes_border_opacity | divided_by: 100.0 }};
        --text-boxes-border-width: {{ settings.text_boxes_border_thickness }}px;
        --text-boxes-radius: {{ settings.text_boxes_radius }}px;
        --text-boxes-shadow-opacity: {{ settings.text_boxes_shadow_opacity | divided_by: 100.0 }};
        --text-boxes-shadow-visible: {% if settings.text_boxes_shadow_opacity > 0 %}1{% else %}0{% endif %};
        --text-boxes-shadow-horizontal-offset: {{ settings.text_boxes_shadow_horizontal_offset }}px;
        --text-boxes-shadow-vertical-offset: {{ settings.text_boxes_shadow_vertical_offset }}px;
        --text-boxes-shadow-blur-radius: {{ settings.text_boxes_shadow_blur }}px;

        --buttons-radius: {{ settings.buttons_radius }}px;
        --buttons-radius-outset: {% if settings.buttons_radius > 0 %}{{ settings.buttons_radius | plus: settings.buttons_border_thickness }}{% else %}0{% endif %}px;
        --buttons-border-width: {% if settings.buttons_border_opacity > 0 %}{{ settings.buttons_border_thickness }}{% else %}0{% endif %}px;
        --buttons-border-opacity: {{ settings.buttons_border_opacity | divided_by: 100.0 }};
        --buttons-shadow-opacity: {{ settings.buttons_shadow_opacity | divided_by: 100.0 }};
        --buttons-shadow-visible: {% if settings.buttons_shadow_opacity > 0 %}1{% else %}0{% endif %};
        --buttons-shadow-horizontal-offset: {{ settings.buttons_shadow_horizontal_offset }}px;
        --buttons-shadow-vertical-offset: {{ settings.buttons_shadow_vertical_offset }}px;
        --buttons-shadow-blur-radius: {{ settings.buttons_shadow_blur }}px;
        --buttons-border-offset: {% if settings.buttons_radius > 0 or settings.buttons_shadow_opacity > 0 %}0.3{% else %}0{% endif %}px;

        --inputs-radius: {{ settings.inputs_radius }}px;
        --inputs-border-width: {{ settings.inputs_border_thickness }}px;
        --inputs-border-opacity: {{ settings.inputs_border_opacity | divided_by: 100.0 }};
        --inputs-shadow-opacity: {{ settings.inputs_shadow_opacity | divided_by: 100.0 }};
        --inputs-shadow-horizontal-offset: {{ settings.inputs_shadow_horizontal_offset }}px;
        --inputs-margin-offset: {% if settings.inputs_shadow_vertical_offset != 0 and settings.inputs_shadow_opacity > 0 %}{{ settings.inputs_shadow_vertical_offset | abs }}{% else %}0{% endif %}px;
        --inputs-shadow-vertical-offset: {{ settings.inputs_shadow_vertical_offset }}px;
        --inputs-shadow-blur-radius: {{ settings.inputs_shadow_blur }}px;
        --inputs-radius-outset: {% if settings.inputs_radius > 0 %}{{ settings.inputs_radius | plus: settings.inputs_border_thickness }}{% else %}0{% endif %}px;

        --variant-pills-radius: {{ settings.variant_pills_radius }}px;
        --variant-pills-border-width: {{ settings.variant_pills_border_thickness }}px;
        --variant-pills-border-opacity: {{ settings.variant_pills_border_opacity | divided_by: 100.0 }};
        --variant-pills-shadow-opacity: {{ settings.variant_pills_shadow_opacity | divided_by: 100.0 }};
        --variant-pills-shadow-horizontal-offset: {{ settings.variant_pills_shadow_horizontal_offset }}px;
        --variant-pills-shadow-vertical-offset: {{ settings.variant_pills_shadow_vertical_offset }}px;
        --variant-pills-shadow-blur-radius: {{ settings.variant_pills_shadow_blur }}px;
      }

      
      *,
      *::before,
      *::after {
        box-sizing: inherit;
      }

      html {
        box-sizing: border-box;
        font-size: calc(var(--font-body-scale) * 62.5%);
        height: 100%;
      }

      body {
        display: grid;
        grid-template-rows: auto auto 1fr auto;
        grid-template-columns: 100%;
        min-height: 100%;
        margin: 0;
        font-size: 1.5rem;
        letter-spacing: 0.06rem;
        line-height: calc(1 + 0.8 / var(--font-body-scale));
        font-family: var(--font-body-family);
        font-style: var(--font-body-style);
        font-weight: var(--font-body-weight);
      }

      @media screen and (min-width: 750px) {
        body {
          font-size: 1.6rem;
        }
      }
    {% endstyle %}

    {{ 'base.css' | asset_url | stylesheet_tag }}
    {{ 'common.css' | asset_url | stylesheet_tag }}
    {{ 'custom.css' | asset_url | stylesheet_tag }}
  
    {%- case template.suffix -%}
      {%- when 'story' -%}
        {{ 'story.css' | asset_url | stylesheet_tag }}
      
      {%- when 'our-mission' -%}
        {{ 'our-mission.css' | asset_url | stylesheet_tag }}

      {%- when 'partner-with-us' -%}
        {{ 'partner-with-us.css' | asset_url | stylesheet_tag }}

      {%- when 'materials' -%}
        {{ 'materials.css' | asset_url | stylesheet_tag }}  

      {%- when 'whats-in-a-foot-print' -%}
        {{ 'foot-print.css' | asset_url | stylesheet_tag }}  

      {%- when 'camp' -%}
        {{ 'camp.css' | asset_url | stylesheet_tag }}

      {%- when 'case-studies' -%}
          {{ 'case-studies.css' | asset_url | stylesheet_tag }} 

      {%- when 'why-kapes' -%}
          {{ 'why-kapes.css' | asset_url | stylesheet_tag }} 
  
    {%- endcase -%}
      
    {{ 'swiper.min.css' | asset_url | stylesheet_tag }}
    
    {%- unless settings.type_body_font.system? -%}
      <link rel="preload" as="font" href="{{ settings.type_body_font | font_url }}" type="font/woff2" crossorigin>
    {%- endunless -%}
    {%- unless settings.type_header_font.system? -%}
      <link rel="preload" as="font" href="{{ settings.type_header_font | font_url }}" type="font/woff2" crossorigin>
    {%- endunless -%}

    {%- if settings.predictive_search_enabled -%}
      <link
        rel="stylesheet"
        href="{{ 'component-predictive-search.css' | asset_url }}"
        media="print"
        onload="this.media='all'"
      >
    {%- endif -%}

    <script>
      document.documentElement.className = document.documentElement.className.replace('no-js', 'js');
      if (Shopify.designMode) {
        document.documentElement.classList.add('shopify-design-mode');
      }

    </script>

    
  {% capture cur %}{% include "booster-currency" %}{% endcapture %}{% unless cur contains "Liquid error" %}{{ cur }}{% endunless %}

  <script src="{{ 'timesact.js' | asset_url }}" defer="defer"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
</head>

  <body class="gradient{% if settings.animations_hover_elements != 'none' %} animate--hover-{{ settings.animations_hover_elements }}{% endif %} {{ template }}
   {{ template.name }} {% if template.name == 'collection' %}collection-{{ collection.handle }} {% if collection.handle == 'nadeen-school' %}show_currency_box{% endif %} {% else %} hide_currency_box{% endif %}">

    <a class="skip-to-content-link button visually-hidden" href="#MainContent">
      {{ 'accessibility.skip_to_text' | t }}
    </a>

    {% unless customer %}
    {% if request.path == '/collections' or request.path == '/collections/' or request.path contains '/collections/' %}
      <script>
        (function() {
          const pwd = localStorage.getItem('pwd');
          const authenticated = localStorage.getItem('authenticated');
          
          if (!pwd || !authenticated) {
            console.log('[Theme Protection] No authentication found, redirecting to homepage...');
            window.location.replace('/');
          } else {
            console.log('[Theme Protection] Collection access authorized for:', pwd);
          }
        })();
      </script>
      <noscript>
        <meta http-equiv="refresh" content="0;url=/" />
      </noscript>
    {% endif %}
  {% endunless %}

    {%- if settings.cart_type == 'drawer' -%}
      {%- render 'cart-drawer' -%}
    {%- endif -%}

    {% sections 'header-group' %}

    <main id="MainContent" class="content-for-layout focus-none" role="main" tabindex="-1">
      {{ content_for_layout }}
    </main>

    {% sections 'footer-group' %}

    <ul hidden>
      <li id="a11y-refresh-page-message">{{ 'accessibility.refresh_page' | t }}</li>
      <li id="a11y-new-window-message">{{ 'accessibility.link_messages.new_window' | t }}</li>
    </ul>
  
    {%- if template == 'product' or template == 'collection' -%}
      {%- render 'size-guide' -%}
    {%- endif -%}
    
  
  <div id="video_lightbox">
    <div class="modal-bg">
      {%- render 'icon-close' -%}
    </div>
    <div class="modal-content">
      <iframe
        src=""
        allow="autoplay; encrypted-media"
        allowfullscreen
        title=""
      ></iframe>      
    </div>
  </div>
    
    <script>
      window.shopUrl = '{{ request.origin }}';
      window.routes = {
        cart_add_url: '{{ routes.cart_add_url }}',
        cart_change_url: '{{ routes.cart_change_url }}',
        cart_update_url: '{{ routes.cart_update_url }}',
        cart_url: '{{ routes.cart_url }}',
        predictive_search_url: '{{ routes.predictive_search_url }}',
      };

      window.cartStrings = {
        error: `{{ 'sections.cart.cart_error' | t }}`,
        quantityError: `{{ 'sections.cart.cart_quantity_error_html' | t: quantity: '[quantity]' }}`,
      };

      window.variantStrings = {
        addToCart: `{{ 'products.product.add_to_cart' | t }}`,
        soldOut: `{{ 'products.product.sold_out' | t }}`,
        unavailable: `{{ 'products.product.unavailable' | t }}`,
        unavailable_with_option: `{{ 'products.product.value_unavailable' | t: option_value: '[value]' }}`,
      };

      window.accessibilityStrings = {
        imageAvailable: `{{ 'products.product.media.image_available' | t: index: '[index]' }}`,
        shareSuccess: `{{ 'general.share.success_message' | t }}`,
        pauseSlideshow: `{{ 'sections.slideshow.pause_slideshow' | t }}`,
        playSlideshow: `{{ 'sections.slideshow.play_slideshow' | t }}`,
      };
    </script>

    {%- if settings.predictive_search_enabled -%}
      <script src="{{ 'predictive-search.js' | asset_url }}" defer="defer"></script>
    {%- endif -%}
    
    {{ 'jquery.min.js' | asset_url | script_tag }}  
    {{ 'swiper.min.js' | asset_url | script_tag }}
    {{ 'custom.js' | asset_url | script_tag }}

    <!-- ENHANCED: Dynamic school code mapping for navigation links -->
    <script>
      function initializeNavigation() {
        if (typeof $ === 'undefined') {
          console.warn('[Theme] jQuery not loaded, retrying...');
          setTimeout(initializeNavigation, 100);
          return;
        }
        
        try {
        console.log('[Theme] Initializing enhanced navigation links...');
        
        // Get current school from localStorage
        const currentSchool = localStorage.getItem("school");
        const authenticated = localStorage.getItem("authenticated");
        
        if (currentSchool && authenticated && window.KAPES_SCHOOL_DATABASE) {
          const schoolData = window.KAPES_SCHOOL_DATABASE[currentSchool.toUpperCase()];
          
          if (schoolData) {
            console.log('[Theme] Setting navigation for school:', schoolData.name);
            
            // Update navigation links to point to the correct collection
            const collectionUrl = schoolData.url;
            $('#HeaderMenu-shop').attr('href', collectionUrl);
            $('#HeaderDrawer-shop').attr('href', collectionUrl);
            
            // Set school code in any form fields
            $('.school-code').val(currentSchool);
            
            // Enhanced product visibility
            if (typeof window.showProducts === 'function') {
              window.showProducts();
            }
            
            // Set preferred currency if available
            const preferredCurrency = localStorage.getItem('preferredCurrency');
            if (preferredCurrency) {
              console.log('[Theme] Preferred currency:', preferredCurrency);
              // Trigger currency change if needed
              setTimeout(function() {
                const currencyFlag = $(`li.flag-${preferredCurrency}`);
                if (currencyFlag.length) {
                  currencyFlag.trigger('click');
                }
              }, 1000);
            }
          }
        }
        } catch (error) {
          console.warn('[Theme] Error in navigation initialization:', error);
        }
        
        // Enhanced school code validation function
        window.validateAndRedirectSchoolCode = function(code) {
          if (!code) return false;
          
          const normalizedCode = code.toUpperCase();
          const schoolData = window.KAPES_SCHOOL_DATABASE[normalizedCode];
          
          if (schoolData) {
            console.log('[Theme] Validating and redirecting to:', schoolData.name);
            
            // Set comprehensive authentication
            localStorage.setItem('pwd', normalizedCode);
            localStorage.setItem('school', normalizedCode);
            localStorage.setItem('schoolName', schoolData.name);
            localStorage.setItem('preferredCurrency', schoolData.currency);
            localStorage.setItem('authenticated', 'true');
            localStorage.setItem('authTimestamp', Date.now().toString());
            
            // Redirect to school collection
            window.location.href = schoolData.url + '?authenticated=true';
            return true;
          } else {
            console.warn('[Theme] Invalid school code entered:', normalizedCode);
            alert('Invalid school code. Please check your code and try again.');
            return false;
          }
        };

        // Listen for authentication events
        window.addEventListener('kapes:authenticated', function(event) {
          console.log('[Theme] Authentication event received:', event.detail);
          
          // Update UI based on authentication
          if (typeof window.showProducts === 'function') {
            window.showProducts();
          }
          
          // Update navigation with safety checks
          if (event.detail.schoolData) {
            const collectionUrl = event.detail.schoolData.url;
            
            // Safe jQuery usage with fallbacks
            try {
              if (typeof $ !== 'undefined' && $.fn) {
                // Use jQuery if available
                const headerMenuShop = $('#HeaderMenu-shop');
                const headerDrawerShop = $('#HeaderDrawer-shop');
                
                if (headerMenuShop.length) {
                  headerMenuShop.attr('href', collectionUrl);
                }
                if (headerDrawerShop.length) {
                  headerDrawerShop.attr('href', collectionUrl);
                }
              } else {
                // Fallback to vanilla JavaScript
                const headerMenuShop = document.getElementById('HeaderMenu-shop');
                const headerDrawerShop = document.getElementById('HeaderDrawer-shop');
                
                if (headerMenuShop) {
                  headerMenuShop.setAttribute('href', collectionUrl);
                }
                if (headerDrawerShop) {
                  headerDrawerShop.setAttribute('href', collectionUrl);
                }
              }
            } catch (error) {
              console.warn('[Theme] Error updating navigation links:', error);
              
              // Final fallback with vanilla JavaScript
              try {
                const headerMenuShop = document.getElementById('HeaderMenu-shop');
                const headerDrawerShop = document.getElementById('HeaderDrawer-shop');
                
                if (headerMenuShop) {
                  headerMenuShop.setAttribute('href', collectionUrl);
                }
                if (headerDrawerShop) {
                  headerDrawerShop.setAttribute('href', collectionUrl);
                }
              } catch (fallbackError) {
                console.error('[Theme] Failed to update navigation links:', fallbackError);
              }
            }
          }
        });
      
      // Initialize navigation when DOM is ready
      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initializeNavigation);
      } else {
        initializeNavigation();
      }
    </script>      

{% if template.name == 'index' %}

<div class="code_help_modal" >
<div class="overlay" style="display:block!important;"></div>
  <div class="modal_content">
     <p class="close_icon">X</p>
     <p class="modal_text">{{ settings.popup_text }}</p> 
  </div>
</div>
{% endif %}

<!-- Enhanced school code metadata for debugging -->
<div class="coll-metas hide hidden">
{% assign collectionHandle = 'arbor-school' %}      
  {% assign the_collection = collections[collectionHandle] %}
  {% if the_collection %}
    {% assign my_metafield = the_collection.metafields.custom.school_code %}
    {% assign arbor_school = my_metafield.value %}
  {% endif %}
<!--  -->
{% assign collectionHandle = 'fairgreen-international' %}      
  {% assign the_collection = collections[collectionHandle] %}
  {% if the_collection %}
    {% assign my_metafield = the_collection.metafields.custom.school_code %}
    {% assign fairgree_school = my_metafield.value %}
  {% endif %}
<!--  -->
{% assign collectionHandle = 'nadeen-school' %}      
  {% assign the_collection = collections[collectionHandle] %}
  {% if the_collection %}
    {% assign my_metafield = the_collection.metafields.custom.school_code %}
    {% assign nadeed_school = my_metafield.value %}
  {% endif %}
<!--  -->
{% assign collectionHandle = 'cheltenham-muscat' %}      
  {% assign the_collection = collections[collectionHandle] %}
  {% if the_collection %}
    {% assign my_metafield = the_collection.metafields.custom.school_code %}
    {% assign cheltenham_muscat_school = my_metafield.value %}
  {% endif %}
<!--  -->
{% assign collectionHandle = 'bisj' %}      
  {% assign the_collection = collections[collectionHandle] %}
  {% if the_collection %}
    {% assign my_metafield = the_collection.metafields.custom.school_code %}
    {% assign bisj_school = my_metafield.value %}
  {% endif %}
<!--  -->
{% assign collectionHandle = 'school-b1sj47x9' %}      
  {% assign the_collection = collections[collectionHandle] %}
  {% if the_collection %}
    {% assign my_metafield = the_collection.metafields.custom.school_code %}
    {% assign school_b1sj47x9_code = my_metafield.value %}
  {% endif %}
<!--  -->
{% assign collectionHandle = 'najmara' %}      
  {% assign the_collection = collections[collectionHandle] %}
  {% if the_collection %}
    {% assign my_metafield = the_collection.metafields.custom.school_code %}
    {% assign najmara_school = my_metafield.value %}
  {% endif %}
<!--      -->
<input class="hidden" id="arbor" value="{{ arbor_school | default: '' }}">
<input class="hidden" id="fairgreen" value="{{ fairgree_school | default: '' }}">
<input class="hidden" id="nadeed" value="{{ nadeed_school | default: '' }}">
<input class="hidden" id="cheltenham_muscat" value="{{ cheltenham_muscat_school | default: '' }}">
<input class="hidden" id="bisj" value="{{ bisj_school | default: '' }}"> 
<input class="hidden" id="school-b1sj47x9" value="{{ school_b1sj47x9_code | default: '' }}">
<input class="hidden" id="najmara" value="{{ najmara_school | default: '' }}">   
<input class="hidden" id="tests" value="">

  </div>
{% include "scm-currency-switcher" %}
{% include "scm-currency" %}
{% render 'globo.preoder.custom' %}
</body>

{% if customer %}
<script>
$(document).ready(function(){
 if (localStorage.getItem("pwd") != null && localStorage.getItem("authenticated") === "true") {
  try {
    const homeSection = $("#home-2");
    if (homeSection.length) {
      const items = $("#home-2 ul.multicolumn-list li.item_2");
      if (items.length) {
        items.hide().addClass("hidden");
        const shop_now = '<li class="multicolumn-list__item grid__item multicolumn-list__item--empty scroll-trigger--offscreen"><div id="search-schools" class="shop_now_sec"><a href="#" user="login"><button type="button">Shop Now</button></a></div></li>';
        items.parent().append(shop_now);
        $(".shop_now_sec").show();
      }
    }
  } catch (error) {
    console.warn('[Theme] Error in customer section:', error);
  }
 }
})
</script>
{% else %}
<script>
$(document).ready(function(){
 if (localStorage.getItem("pwd") != null && localStorage.getItem("authenticated") === "true") {
  try {
    const homeSection = $("#home-2");
    if (homeSection.length) {
      const items = $("#home-2 ul.multicolumn-list li.item_2");
      if (items.length) {
        items.hide().addClass("hidden");
        const shop_now = '<li class="multicolumn-list__item grid__item multicolumn-list__item--empty scroll-trigger--offscreen"><div id="search-schools" class="shop_now_sec"><a href="#"><button type="button">Shop Now</button></a></div></li>';
        items.parent().append(shop_now);
        $(".shop_now_sec").show();
      }
    }
  } catch (error) {
    console.warn('[Theme] Error in non-customer section:', error);
  }
 }
})
</script>
{% endif %}

{% if template.name == 'collection' %} 
 {% if collection.handle == 'nadeen-school' %}
  <script>
  $(document).ready(function(){
    setTimeout(function(){$("li.flag-BHD").trigger("click");},1000);
console.log("BHD");
  })
  </script>
   {% elsif collection.handle == 'fairgreen-international' %}
  <script>
  $(document).ready(function(){
     setTimeout(function(){ $("li.flag-AED").trigger("click");},1000);
console.log("AED");
  })
  </script>
   {% elsif collection.handle == 'frontpage' %}
  <script>
  $(document).ready(function(){
     setTimeout(function(){ $("li.flag-AED").trigger("click");},1000);
console.log("AED");
  })
  </script>
  {% elsif collection.handle == 'arbor-school' %}
  <script>
  $(document).ready(function(){
     setTimeout(function(){ $("li.flag-AED").trigger("click");},1000);
console.log("AED");
  })
  </script>

  {% elsif collection.handle == 'bisj' %}
  <script>
  $(document).ready(function(){
     setTimeout(function(){ $("li.flag-SAR").trigger("click");},1000);
console.log("SAR");

  })
  </script> 

   {% elsif collection.handle == 'cheltenham-muscat' %}
  <script>
  $(document).ready(function(){
     setTimeout(function(){ $("li.flag-OMR").trigger("click");},1000);
console.log("OMR");
  })
  </script> 

   {% elsif collection.handle == 'school-b1sj47x9' %}
  <script>
  $(document).ready(function(){
     console.log('[Currency] Setting SAR for BISJ collection (school-b1sj47x9)');
     setTimeout(function(){ 
       $("li.flag-SAR").trigger("click");
       console.log("SAR - Enhanced BISJ Collection");
     }, 1000);
     
     // Enhanced product visibility for authenticated users
     setTimeout(function() {
       const authenticated = localStorage.getItem("authenticated");
       const pwd = localStorage.getItem("pwd");
       
       if (authenticated === "true" && pwd) {
         console.log('[Collection] Ensuring products are visible for authenticated user:', pwd);
         if (typeof window.showProducts === 'function') {
           window.showProducts();
         }
       }
     }, 500);
  })
  </script>

   {% elsif collection.handle == 'school-demo123' %}
  <script>
  $(document).ready(function(){
     setTimeout(function(){ $("li.flag-AED").trigger("click");},1000);
console.log("AED - Demo School");
  })
  </script>

   {% elsif collection.handle == 'school-test001' %}
  <script>
  $(document).ready(function(){
     setTimeout(function(){ $("li.flag-AED").trigger("click");},1000);
console.log("AED - Test School");
  })
  </script>
   
  {% endif %}
{% endif %}

<!-- Enhanced currency handling with SAR suffix fix -->
<script>
$(document).ready(function(){
  
setInterval(function() {
    if ($('body').attr('data-current') === 'SAR') {
        $("li.grid__item, .product__info-wrapper, quick-add-modal").each(function(){
            var priceElement = $(this).find(".price__container .price-item.price-item--regular .money");
            var price = priceElement.text().trim(); // Trim whitespace

            if (price.slice(-2) === "SR") {
                price = price.slice(0, -2) + "SAR";
            }else if(price.slice(-3) === "AED"){
              price = price.slice(0, -3) + "SAR";
            }else if(price.slice(-3) === "OMR"){
              price = price.slice(0, -3) + "SAR";
            }

            priceElement.text(price); 
        });
    }
}, 1000);
});
</script>
 
<!-- Enhanced collection access protection with better authentication -->
{% if template contains 'collection' or template contains 'product'%}
<script>
$(document).ready(function() {
    var pwd = localStorage.getItem("pwd");
    var authenticated = localStorage.getItem("authenticated");
    var authTimestamp = localStorage.getItem("authTimestamp");
 
    // Check if authentication is valid and not expired (24 hours)
    var isAuthValid = pwd && authenticated === "true";
    if (authTimestamp) {
      var now = Date.now();
      var authAge = now - parseInt(authTimestamp);
      var maxAge = 24 * 60 * 60 * 1000; // 24 hours
      
      if (authAge > maxAge) {
        console.log('[Theme] Authentication expired, clearing...');
        localStorage.removeItem('pwd');
        localStorage.removeItem('school');
        localStorage.removeItem('schoolName');
        localStorage.removeItem('authenticated');
        localStorage.removeItem('authTimestamp');
        isAuthValid = false;
      }
    }
 
    if (!isAuthValid) {
        console.log('[Theme] No valid authentication found, redirecting to homepage...');
        // Redirect to the specified URL if password is not set or is blank
        window.location.href = "https://www.kapesuniforms.com/";
    } else {
        console.log('[Theme] Authenticated for school:', pwd);
        
        // Verify the school code is still valid
        if (window.KAPES_SCHOOL_DATABASE && !window.KAPES_SCHOOL_DATABASE[pwd.toUpperCase()]) {
          console.warn('[Theme] Invalid stored school code, clearing authentication...');
          localStorage.removeItem('pwd');
          localStorage.removeItem('school');
          localStorage.removeItem('schoolName');
          localStorage.removeItem('authenticated');
          localStorage.removeItem('authTimestamp');
          window.location.href = "https://www.kapesuniforms.com/";
        } else {
          // Ensure products are visible for authenticated users
          setTimeout(function() {
            if (typeof window.showProducts === 'function') {
              window.showProducts();
            }
          }, 500);
        }
    }
});
</script>
{% endif %}    
  
</html>
